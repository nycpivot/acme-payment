openapi: 3.0.0
info:
  title: Payment
  version: v0.1.0
  license:
    name: MIT
    url: 'https://github.com/vmwarecloudadvocacy/payment/blob/master/LICENSE'
  contact:
    name: VMware Cloud Advocacy team
    url: 'https://github.com/vmwarecloudadvocacy'
  description: |
    This is the REST API documentation for the [Payment](https://github.com/vmwarecloudadvocacy/payment) Service app of the [ACME Fitness Shop](https://github.com/vmwarecloudadvocacy/acme_fitness_demo).
servers:
  - url: 'http://localhost:9000'
paths:
  /live:
    get:
      summary: Liveness
      tags: []
      responses:
        '200':
          description: OK
          content:
            text/plain:
              examples: {}
      operationId: get_liveness
      description: The live operation returns the current status
    parameters: []
  /pay:
    post:
      summary: Payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    description: Status of the request
                  message:
                    type: string
                    description: Message describing the status
                  amount:
                    type: string
                    description: The total amount of the order
                  transactionID:
                    type: string
                    description: A unique transaction ID generated by the service
                  status:
                    type: string
                    description: HTTP status code
              examples:
                sample:
                  value:
                    success: 'true'
                    message: transaction successful
                    amount: '123'
                    transactionID: '456'
                    status: '200'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    description: Status of the request
                  message:
                    type: string
                    description: Message describing the status
                  amount:
                    type: string
                    description: The total amount of the order
                  transactionID:
                    type: string
                    description: A unique transaction ID generated by the service
                  status:
                    type: string
                    description: HTTP status code
              examples:
                sample-1:
                  value:
                    success: 'false'
                    message: missing required data
                    amount: '123'
                    transactionID: '-1'
                    status: '400'
                sample-2:
                  value:
                    success: 'false'
                    message: not a valid card number
                    amount: '123'
                    transactionID: '-2'
                    status: '400'
                sample-3:
                  value:
                    success: 'false'
                    message: card is expired
                    amount: '123'
                    transactionID: '-3'
                    status: '400'
      operationId: post_pay
      description: Pay takes input and validates the creditcard data.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                card:
                  type:
                    - string
                    - object
                  properties:
                    number:
                      type: string
                      description: The card number (must be a multiple of 4 digits)
                    expYear:
                      type: string
                      description: The expiry year of the card (must be 4 digits)
                    expMonth:
                      type: string
                      description: git statushe expiry month (must be two digits)
                    ccv:
                      type: string
                      description: The CVV code
                total:
                  type: string
                  description: The total amount of the order
            examples:
              sample:
                value:
                  card:
                    number: '1234'
                    expYear: '2020'
                    expMonth: '01'
                    ccv: '123'
                  total: '123'
        description: Payment request
components:
  schemas: {}
